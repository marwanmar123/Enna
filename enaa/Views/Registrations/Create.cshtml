@model enaa.Models.Registration

@{
    ViewData["Title"] = "Inscription";
        List<SelectListItem> genre = new List<SelectListItem>()
        {
            new SelectListItem() { Text="Homme", Value="Homme"},
            new SelectListItem() { Text="Femme", Value="Homme"},
        };

    List<SelectListItem> situation = new List<SelectListItem>()
        {
            new SelectListItem() { Text="Oui", Value="Oui"},
            new SelectListItem() { Text="Non", Value="Non"},
        };
}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<div id="hero-register">
    <div class="w-75 m-auto hero-all" data-aos="zoom-out" data-aos-delay="100">
        <div class="enaa-content-register" data-aos="flip-right">
            <img class="enaa-corner1-register" src="~/assets/img/corner1.png">
            <h1 class="enaa-Text-register">Inscription</h1>
            <img class="enaa-corner2-register" src="~/assets/img/corner1.png">
        </div>
    </div>
</div>

<section class="w-75 section-multisteps-form" style="margin:1em auto">
    <div class="content">
      <!--content inner-->
      <div class="content__inner">
        <div class="container overflow-hidden">
          <!--multisteps-form-->
          <div class="multisteps-form">
            <!--progress bar-->
            <div class="row pt-3">
              <div class="col-12 col-lg-8 ml-auto mr-auto mb-4">
                <div class="multisteps-form__progress">
                  <button
                    class="multisteps-form__progress-btn js-active"
                    type="button"
                    title="Infos perso"
                  >
                    Infos perso
                  </button>
                  <button
                    class="multisteps-form__progress-btn"
                    type="button"
                    title="Parcours académique"
                  >
                  Parcours académique
                  </button>
                  <button
                    class="multisteps-form__progress-btn"
                    type="button"
                    title="Expérience"
                  >
                  Expérience
                  </button>
                  <button
                    class="multisteps-form__progress-btn"
                    type="button"
                    title="Comments"
                  >
                    Commentaire
                  </button>
                </div>
              </div>
            </div>
            <!--form panels-->
            <div class="row">
              <div class="col-12 col-lg-8 m-auto">
                <form onsubmit="return submitForm(this);" class="multisteps-form__form" asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                  <!--single form panel-->
                  <div
                    class="multisteps-form__panel p-4 rounded bg-white js-active"
                    data-animation="slideHorz"
                  >
                  <h5 class="text-danger text-center p-2">@TempData["inputsEmpty"]</h5>
                    <h3 class="multisteps-form__title">Informations personnelles</h3>
                    <div class="multisteps-form__content">
                      <div class="m-auto d-flex flex-row justify-content-around">
                       <div class="form-group w-50 mr-2">
                            <label asp-for="Nom" class="control-label"></label>
                            <input asp-for="Nom" class="form-control nameInputs" />
                            <span asp-validation-for="Nom" class="text-danger"></span>
                        </div>
                        <div class="form-group w-50">
                            <label asp-for="Prenom" class="control-label"></label>
                            <input asp-for="Prenom" class="form-control nameInputs" />
                            <span asp-validation-for="Prenom" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="d-flex flex-column">
                            <label class="control-label">Genre</label>
                            <select asp-for="Genre" asp-items="@genre" class="form-control custom-select mb-3">
                                <option>-Select Genre-</option>
                            </select>
                      </div>
                        
                      <div class="m-auto d-flex flex-row justify-content-around">
                        <div class="form-group w-50 mr-2">
                            <label asp-for="Age" class="control-label"></label>
                            <input type="number" asp-for="Age" class="form-control nameInputs" />
                            <span asp-validation-for="Age" class="text-danger"></span>
                        </div>
                        <div class="form-group w-50">
                            <label asp-for="Ville" class="control-label"></label>
                            <input asp-for="Ville" class="form-control nameInputs" />
                            <span asp-validation-for="Ville" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="m-auto d-flex flex-row justify-content-around">
                        <div class="form-group w-50 mr-2">
                        <label asp-for="Email" class="control-label"></label>
                        <input type="email" asp-for="Email" class="form-control nameInputs" />
                        @* <p style="color:green;">@TempData["emailSuccess"]</p> *@
                        <span asp-validation-for="Email" class="text-danger"></span>
                     </div>
                    <div class="form-group w-50">
                        <label asp-for="Phone" class="control-label"></label>
                        <input type="number" asp-for="Phone" class="form-control nameInputs" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                      </div>
                        <div class="m-auto d-flex flex-row justify-content-around">
                            <div class="form-group w-50 mr-2">
                                <label class="control-label">Date de naissance</label>
                                <input type="date" asp-for="DateDeN" class="form-control nameInputs" />
                                <span asp-validation-for="DateDeN" class="text-danger"></span>
                            </div>
                            <div class="form-group w-50">
                                <label asp-for="Cin" class="control-label"></label>
                                <input asp-for="Cin" class="form-control" id="sourceInput" onchange="copyValue()" />
                                <input type="hidden" readonly class="form-control" name="cinUser" id="cinInput" required />
                                <span asp-validation-for="Cin" class="text-danger"></span>
                            </div>
                        </div>
                                        <h5 class="text-danger p-2">@TempData["cinExiste"]</h5>
                      <div class="button-row d-flex mt-4">
                        <button
                          class="multisteps-form_btn ml-auto js-btn-next"
                          type="button"
                          title="Next"
                        >
                          Next
                        </button>
                      </div>
                    </div>
                  </div>
                  <!--single form panel-->
                  <div
                    class="multisteps-form__panel p-4 rounded bg-white"
                    data-animation="slideHorz"
                  >
                    <h3 class="multisteps-form__title">Parcours académique</h3>
                    <div class="multisteps-form__content">
                      <div class="m-auto d-flex flex-row justify-content-around">
                        <div class="form-group w-50 mr-2">
                            <label class="control-label">Branche du bac</label>
                            <input asp-for="BrancheBac" class="form-control" />
                            <span asp-validation-for="BrancheBac" class="text-danger"></span>
                        </div>
                        <div class="form-group w-50">
                            <label class="control-label">Niveau académique</label>
                            <input asp-for="NiveauAcad" class="form-control" />
                            <span asp-validation-for="NiveauAcad" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="m-auto d-flex flex-row justify-content-around">
                        <div class="form-group w-50 mr-2">
                            <label class="control-label">Filière académique</label>
                            <input asp-for="FiliereAcad" class="form-control" />
                            <span asp-validation-for="FiliereAcad" class="text-danger"></span>
                        </div>
                        <div class="form-group w-50">
                            <label class="control-label">Autre filière académique</label>
                            <input asp-for="AutreFiliereAcad" class="form-control" />
                            <span asp-validation-for="AutreFiliereAcad" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="m-auto d-flex flex-row justify-content-around">
                        <div class="form-group w-50 mr-2">
                            <label asp-for="DernierDip" class="control-label"></label>
                            <input asp-for="DernierDip" class="form-control nameInputs" />
                            <span asp-validation-for="DernierDip" class="text-danger"></span>
                        </div>
                        <div class="form-group w-50">
                            <label asp-for="Etablissement" class="control-label"></label>
                            <input asp-for="Etablissement" class="form-control nameInputs" />
                            <span asp-validation-for="Etablissement" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="m-auto d-flex flex-row justify-content-center">
                        <div class="form-group d-flex flex-row">
                            <label class="control-label">Année d'obtention de votre dernier diplôme</label>
                            <input type="date" asp-for="AnneeDiplome" class="form-control nameInputs" />
                            <span asp-validation-for="AnneeDiplome" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="button-row d-flex mt-4">
                        <button
                          class="multisteps-form_btn js-btn-prev"
                          type="button"
                          title="Prev"
                        >
                          Prev
                        </button>
                        <button
                          class="multisteps-form_btn ml-auto js-btn-next"
                          type="button"
                          title="Next"
                        >
                          Next
                        </button>
                      </div>
                    </div>
                  </div>
                  <!--single form panel-->
                  <div
                    class="multisteps-form__panel  p-4 rounded bg-white"
                    data-animation="slideHorz"
                  >
                    <h3 class="multisteps-form__title">Expérience</h3>
                    <div class="multisteps-form__content">
                      <div class="w-75 m-auto d-flex flex-row justify-content-around text-center">
                        <label class="control-label">Avez-vous une expérience professionnelles ?</label>
                        <select asp-for="Experience" asp-items="@situation" class="form-control custom-select">
                            <option>-Oui ou Non-</option>
                            @* <option value="@Model.Experience">@Model.Experience</option> *@
                        </select>
                      </div>
                      <div class="m-auto d-flex flex-row justify-content-center pt-4">
                        <div class="form-group w-75">
                          <label class="control-label">Si oui, de combien d'années?</label>
                          <input type="number" asp-for="SiOuiExperience" class="form-control" />
                          <span asp-validation-for="SiOuiExperience" class="text-danger"></span>
                        </div>
                      </div>
                      <div class="row">
                        <div class="button-row d-flex mt-4 col-12">
                          <button
                            class="multisteps-form_btn js-btn-prev"
                            type="button"
                            title="Prev"
                          >
                            Prev
                          </button>
                          <button
                            class="multisteps-form_btn ml-auto js-btn-next"
                            type="button"
                            title="Next"
                          >
                            Next
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <!--single form panel-->
                  <div
                    class="multisteps-form__panel p-4 rounded bg-white"
                    data-animation="slideHorz"
                  >
                    <h3 class="multisteps-form__title">Comments</h3>
                    <div class="multisteps-form__content">
                    <div class="form-group w-50">
                        <label class="control-label">Commentaire</label>
                        <textarea asp-for="Comment" class="form-control" placeholder="Comments"></textarea>
                        <span asp-validation-for="Comment" class="text-danger"></span>
                    </div>
                      <div class="button-row d-flex mt-4">
                        <button
                          class="multisteps-form_btn js-btn-prev"
                          type="button"
                          title="Prev"
                        >
                          Prev
                        </button>
                        <button
                          class="btn btn-success ml-auto"
                          type="submit"
                          title="Send"
                        >
                          Envoyer
                        </button>
                      </div>
                    </div>
                  </div>
                    
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    </section>





    <!-- partial -->
    <script>
function submitForm(form) {
  // Get all input elements with the class name "nameInputs".
  const inputFields = document.querySelectorAll('.nameInputs');

  // Check if all of the input fields are empty.
  

  // Show the SweetAlert modal.
  Swal.fire({
    title: "Merci!",
    text: "Merci pour votre inscription, Veuillez vérifier votre boîte mail.",
    icon: "success",
    confirmButtonText: "Sauvegarder",
  }).then((result) => {
    // If the user confirms, submit the form.
    if (result.isConfirmed) {
      form.submit();
    }
  });

  // Prevent the default form submission.
  return false;
}
    
//////////////////////////////
    function copyValue() {
        var sourceInput = document.getElementById("sourceInput");
        var destinationInput = document.getElementById("cinInput");
        destinationInput.value = sourceInput.value;
    }

///////////////////////

    // // Get the two checkboxes
    // const hommeCheckbox = document.querySelector('input[type="checkbox"][value="Homme"]');
    // const femmeCheckbox = document.querySelector('input[type="checkbox"][value="Femme"]');

    // // Add a click event listener to each checkbox
    // hommeCheckbox.addEventListener('click', function () {
    //     // If the homme checkbox is checked, uncheck the femme checkbox
    //     if (hommeCheckbox.checked) {
    //         femmeCheckbox.checked = false;
    //     }
    // });

    // femmeCheckbox.addEventListener('click', function () {
    //     // If the femme checkbox is checked, uncheck the homme checkbox
    //     if (femmeCheckbox.checked) {
    //         hommeCheckbox.checked = false;
    //     }
    // });


    //     // Get the two checkboxes
    // const ouiCheckbox = document.querySelector('input[type="checkbox"][value="Oui"]');
    // const nonCheckbox = document.querySelector('input[type="checkbox"][value="Non"]');

    // // Add a click event listener to each checkbox
    // ouiCheckbox.addEventListener('click', function () {
    //     // If the oui checkbox is checked, uncheck the non checkbox
    //     if (ouiCheckbox.checked) {
    //         nonCheckbox.checked = false;
    //     }
    // });

    // nonCheckbox.addEventListener('click', function () {
    //     // If the non checkbox is checked, uncheck the oui checkbox
    //     if (nonCheckbox.checked) {
    //         ouiCheckbox.checked = false;
    //     }
    // });

        /////////////////////

      //DOM elements
      const DOMstrings = {
        stepsBtnClass: "multisteps-form__progress-btn",
        stepsBtns: document.querySelectorAll(`.multisteps-form__progress-btn`),
        stepsBar: document.querySelector(".multisteps-form__progress"),
        stepsForm: document.querySelector(".multisteps-form__form"),
        stepsFormTextareas: document.querySelectorAll(
          ".multisteps-form__textarea"
        ),
        stepFormPanelClass: "multisteps-form__panel",
        stepFormPanels: document.querySelectorAll(".multisteps-form__panel"),
        stepPrevBtnClass: "js-btn-prev",
        stepNextBtnClass: "js-btn-next",
      };

      //remove class from a set of items
      const removeClasses = (elemSet, className) => {
        elemSet.forEach((elem) => {
          elem.classList.remove(className);
        });
      };

      //return exect parent node of the element
      const findParent = (elem, parentClass) => {
        let currentNode = elem;

        while (!currentNode.classList.contains(parentClass)) {
          currentNode = currentNode.parentNode;
        }

        return currentNode;
      };

      //get active button step number
      const getActiveStep = (elem) => {
        return Array.from(DOMstrings.stepsBtns).indexOf(elem);
      };

      //set all steps before clicked (and clicked too) to active
      const setActiveStep = (activeStepNum) => {
        //remove active state from all the state
        removeClasses(DOMstrings.stepsBtns, "js-active");

        //set picked items to active
        DOMstrings.stepsBtns.forEach((elem, index) => {
          if (index <= activeStepNum) {
            elem.classList.add("js-active");
          }
        });
      };

      //get active panel
      const getActivePanel = () => {
        let activePanel;

        DOMstrings.stepFormPanels.forEach((elem) => {
          if (elem.classList.contains("js-active")) {
            activePanel = elem;
          }
        });

        return activePanel;
      };

      //open active panel (and close unactive panels)
      const setActivePanel = (activePanelNum) => {
        //remove active class from all the panels
        removeClasses(DOMstrings.stepFormPanels, "js-active");

        //show active panel
        DOMstrings.stepFormPanels.forEach((elem, index) => {
          if (index === activePanelNum) {
            elem.classList.add("js-active");

            setFormHeight(elem);
          }
        });
      };

      //set form height equal to current panel height
      const formHeight = (activePanel) => {
        const activePanelHeight = activePanel.offsetHeight;

        DOMstrings.stepsForm.style.height = `${activePanelHeight}px`;
      };

      const setFormHeight = () => {
        const activePanel = getActivePanel();

        formHeight(activePanel);
      };

      //STEPS BAR CLICK FUNCTION
      DOMstrings.stepsBar.addEventListener("click", (e) => {
        //check if click target is a step button
        const eventTarget = e.target;

        if (!eventTarget.classList.contains(`${DOMstrings.stepsBtnClass}`)) {
          return;
        }

        //get active button step number
        const activeStep = getActiveStep(eventTarget);

        //set all steps before clicked (and clicked too) to active
        setActiveStep(activeStep);

        //open active panel
        setActivePanel(activeStep);
      });

      //PREV/NEXT BTNS CLICK
      DOMstrings.stepsForm.addEventListener("click", (e) => {
        const eventTarget = e.target;

        //check if we clicked on `PREV` or NEXT` buttons
        if (
          !(
            eventTarget.classList.contains(`${DOMstrings.stepPrevBtnClass}`) ||
            eventTarget.classList.contains(`${DOMstrings.stepNextBtnClass}`)
          )
        ) {
          return;
        }

        //find active panel
        const activePanel = findParent(
          eventTarget,
          `${DOMstrings.stepFormPanelClass}`
        );

        let activePanelNum = Array.from(DOMstrings.stepFormPanels).indexOf(
          activePanel
        );

        //set active step and active panel onclick
        if (eventTarget.classList.contains(`${DOMstrings.stepPrevBtnClass}`)) {
          activePanelNum--;
        } else {
          activePanelNum++;
        }

        setActiveStep(activePanelNum);
        setActivePanel(activePanelNum);
      });

      //SETTING PROPER FORM HEIGHT ONLOAD
      window.addEventListener("load", setFormHeight, false);

      //SETTING PROPER FORM HEIGHT ONRESIZE
      window.addEventListener("resize", setFormHeight, false);

      //changing animation via animation select !!!YOU DON'T NEED THIS CODE (if you want to change animation type, just change form panels data-attr)

      const setAnimationType = (newType) => {
        DOMstrings.stepFormPanels.forEach((elem) => {
          elem.dataset.animation = newType;
        });
      };

      //selector onchange - changing animation
      const animationSelect = document.querySelector(".pick-animation__select");

      animationSelect.addEventListener("change", () => {
        const newAnimationType = animationSelect.value;

        setAnimationType(newAnimationType);
      });



    </script>




<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

